plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.flywaydb.flyway' version '11.1.0'
}

group = 'de.hhu.propra'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

repositories {
	mavenCentral()
}

dependencies {
	// General
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.assertj:assertj-core:3.27.3'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.4'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.11.4'
	testImplementation 'com.tngtech.archunit:archunit-junit5-engine:1.4.0'
	testImplementation 'org.mockito:mockito-core:5.16.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	//  implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	// Security Tests
	testImplementation 'org.springframework.security:spring-security-test'

	//DBS + Migration
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.flywaydb:flyway-core'
	implementation "org.flywaydb:flyway-database-postgresql"
	runtimeOnly 'org.postgresql:postgresql'
	// Testcontainers
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'

	// Development
	//developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Configuration
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	//implementation 'org.springframework.data:spring-data-commons'
}

flyway {
	url = 'jdbc:postgresql://localhost:5432/exambyte'
	user = System.getenv('DB_USER') ?: 'defaultUser'  // Fallback-Wert falls die Umgebungsvariable nicht gesetzt ist
	password = System.getenv('DB_PASSWORD') ?: 'defaultPassword'  // Fallback-Wert
	locations = ['classpath:src/main/resources/db/migration']
}

//tasks.named('test') {
test {
	useJUnitPlatform()
//	testLogging {
//		events "passed", "skipped", "failed"
//	}
}
